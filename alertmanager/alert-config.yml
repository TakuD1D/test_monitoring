global: # Global変数
  resolve_timeout: 5m # この時間Prometheusから何も送信されなければ回復アラートを送信する 
  slack_api_url: "https://hooks.slack.com/services/****" # ***はslackapiから
route:
  receiver: 'default' # default receiver : アラートがいずれにも分離されない場合、これがアラートを処理する
  group_by: ['alertname', 'instance', 'severity', 'channel']
  group_wait: 1m # この時間同じグループのアラートを待機し、まとめる
  group_interval:  1h # 同じグループのアラートの送信間隔
  repeat_interval: 1d # 同じアラートの送信感覚

  routes:
    - matchers: # チャンネル名で分岐処理
      - channel = alert-test
        #receiver: 'critical-alert' # receiverを選択
      routes:
        - matchers: # 特定のアラート名で分岐処理(group_waitなどを個別に設定するため)
          - alertname = HighDiskUsage
          receiver: 'critical-alert'
          # High Disk Usageは1,2日で解決しない可能性があるのでインターバルを長めに設定する
          group_wait: 1m 
          group_interval:  1h 
          repeat_interval: 2d 
          #- matchers:
          #- channel = alert
          #receiver: 'warning-alert'
          # routes:
        - matchers:
          - alertname = InstanceDown
          receiver: 'warning-alert'
          group_wait: 1m 
          group_interval:  1h 
          repeat_interval: 2d 

receivers: # Define Each Receiver
  - name: 'default' # Nothing
    slack_configs:
      - channel: '#alert-test'
        title: 'test'
        text: 'test'


  - name: 'critical-alert' # general-channel(任意)というSlackチャンネルにアラートを送信する
    slack_configs:
      - channel: '#alert-test' # Channel Name (なくてもいい, わかりやすくするために書いている
        # 使用可能な変数等を用いてアラートメッセージを作成
        title: '{{ if eq .Status "firing" }}[FIRING]{{else}}[RESOLVED]{{end}} 
                 {{ .GroupLabels.alertname }}'
        text: '{{ if eq .Status "firing" }}{{ .CommonAnnotations.firing_text }}{{else}}
                {{ .CommonAnnotations.resolved_text }}{{end}}'
                #send_resolved: true # 回復したら回復アラートを送信(boolean)
  # 以下も同様
  - name: 'warning-alert'
    slack_configs:
      - channel: '#alert-test' 
        title: '{{ if eq .Status "firing" }}[FIRING]{{else}}[RESOLVED]{{end}}
                  {{ .GroupLabels.alertname }}'
        text: '{{ if eq .Status "firing" }}{{ .CommonAnnotations.firing_text }}{{else}}
                {{ .CommonAnnotations.resolved_text }}{{end}}'
                #send_resolved: true
